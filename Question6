Fragments:
A Fragment represents a behavior or a portion of user interface in an Activity. We can combine multiple fragments in a single activity to build a multi-pane UI and reuse a fragment in multiple activities. We can think of a fragment as a modular section of an activity, which has its own lifecycle, receives its own input events, and which we can add or remove while the activity is running.
A fragment must always be embedded in an activity and the fragment's lifecycle is directly affected by the host activity's lifecycle. For example, when the activity is paused, so are all fragments in it, and when the activity is destroyed, so are all fragments.
I like fragments more because it gives me the power to think of creating complex functionalities that are hard to make without using fragments. It also helps me designing app for different screen sizes and orientations.  Fragments can enforce the hosting Activity to implement specific callback methods, enabling Fragment-to-Activity communication similarly hosting Activity can get a reference to any of its Fragments and execute its methods, and enabling Activity-to-Fragment communication this gives control to different specs of an app. By modularizing different components of the UI and displaying them in Fragments, it makes very easy for me to re-use these components across various Activities.
